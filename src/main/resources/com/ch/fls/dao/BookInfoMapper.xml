<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ch.fls.dao.BookInfoMapper">
    
    <!-- 查询图书列表信息 -->
    <select id="queryBookList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		    a.uuid bookId,
			a.author,
			a.book_title bookTitle,
			a.tags,
			a.image,
			a.rating,
			a.summary,
			b.shelf_name shelfName
		FROM
			fls_book_info a
		LEFT JOIN fls_book_shelf b ON a.book_shelf = b.id
		<if test="shelfType != null and shelfType != '' ">
		   and a.book_shelf = #{shelfType}
		</if>
		where 1=1
		<if test="searchContent != null and searchContent != '' ">
		   and a.isbn = #{searchContent}
		   OR a.author LIKE '%'||#{searchContent}||'%'
		   OR a.book_title LIKE '%'||#{searchContent}||'%'
		</if>	
    </select>
    
    <!-- 查询图书详情 -->
    <select id="queryBookDetail" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		    a.uuid bookId,
			a.author,
			a.author_intro authorIntro,
			a.binding,
			a.book_title bookTitle,
			a.catalog,
			a.image,
			a.isbn,
			a.is_ebook isEbook,
			a.origin_title originTitle,
			a.pages,
			a.press,
			a.price,
			a.publication_date pubDate,
			a.rating,
			a.summary,
			a.tags,
			a.translator,
			b.shelf_name shelfNm
		FROM
			fls_book_info a
		LEFT JOIN fls_book_shelf b ON a.book_shelf = b.id
		WHERE
			a.uuid = #{bookId}	
    </select>
    
    <!-- 新增图书阅读记录 -->
    <insert id="addReadInfo" parameterType="java.util.Map">
		 INSERT fls_user_book_info (
			uuid,
			user_uuid,
			book_uuid,
			read_status,
			create_time
		)
		VALUES
			(
			#{uuid},   
			#{userId},
			#{bookId},
			#{readStatus},
			now()
			)
    </insert>
    
    <!-- 更新图书阅读状态 -->
    <update id="updateReadStatus">
		UPDATE fls_user_book_info a
		SET 
		a.read_status = #{readStatus},
		a.update_time = now()
		WHERE
			a.uuid = #{readId}   
    </update>
    
    <!-- 查询图书阅读记录 -->
    <select id="queryReadBookInfo" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.uuid readId,
			a.read_status readStatus
		FROM
			fls_user_book_info a
		WHERE
			a.book_uuid = #{bookId}
		AND a.user_uuid = #{userId}
    </select>
    
    <!-- 查询书架列表 -->
    <select id="querybookShelfList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id shelfType,
			a.shelf_name shelfName
		FROM
			fls_book_shelf a
		WHERE
			a. STATUS = '1'
    </select>
    
    <!-- 新增书架 -->
    <select id="addBookShelf" parameterType="String">
		INSERT fls_book_shelf (
			shelf_name,
			status,
			create_time
		)
		VALUES
			(
			#{shelfName},   
			'1',
			now()
			)
    </select>
    
    <!-- 更新书架状态 -->
    <update id="deleteBookShell">
		UPDATE fls_book_shelf a
		SET a. STATUS = '00'
		WHERE
			a.id = #{shelfType}		 
    </update>
    
    <!-- 更新书架信息 -->
    <update id="updateBookShell">
		UPDATE fls_book_shelf a
		SET a.shelf_name = #{shelfName}
		WHERE
			a.id = #{shelfType}	 
    </update>
    
    <!-- 新增图书 -->
    <insert id="addBookInfo" parameterType="java.util.Map">
		INSERT fls_book_info (
			uuid,
			isbn,
			book_title,
			origin_title,
			image,
			author,
			translator,
			press,
			publication_date,
			rating,
			tags,
			binding,
			price,
			pages,
			author_intro,
			summary,
			catalog,
			book_shelf,
			is_ebook
		)
		VALUES
			(
			#{uuid},   
			#{isbn},
			#{bookTitle},
			#{originTitle}, 
			#{image},
			#{author},
			#{translator},
			#{press},
			#{publicationDate},
			#{rating},
			#{tags},
			#{binding},
			#{price},
			#{pages},
			#{authorIntro},
			#{summary},
			#{catalog},
			#{bookShelf},
			#{isEbook}
			)
    </insert>
    
    <!-- 更新图书 -->
    <update id="updateBookInfo" parameterType="java.util.Map">
		UPDATE fls_book_info
		SET isbn = #{isbn}, 
		book_title = #{bookTitle},
		origin_title = #{originTitle},
		image = #{image},
		author = #{author},
		translator = #{translator},
		press = #{press},
		publication_date = #{publicationDate},
		rating = #{rating},
		tags = #{tags},
		binding = #{binding},
		price = #{price},
		pages = #{pages},
		author_intro = #{authorIntro},
		summary = #{summary},
		catalog = #{catalog},
		book_shelf = #{bookShelf},
		is_ebook = #{isEbook}
		WHERE
			uuid = #{bookId}    
    </update>
    
</mapper>